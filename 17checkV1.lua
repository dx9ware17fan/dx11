local function f(j) return j and j ~= 0 end local function m(j) if not f(j) then return nil end local o = dx9.GetPosition(j) if o and o.x and o.y and o.z then return o end return nil end local function h(o) if not o then return nil end local a = dx9.WorldToScreen({o.x, o.y, o.z}) if a and a.x and a.y then return a end return nil end local function e() local p = dx9.GetDatamodel() if not f(p) then return end local d = dx9.FindFirstChild(p, "\87\111\114\107\115\112\97\99\101") if not f(d) then return end local t = dx9.GetChildren(d) if not t then return end for _, child in pairs(t) do if f(child) then local mg = dx9.FindFirstChild(child, "\72\101\97\100") if f(mg) then local jm = dx9.GetName(child) local hj = m(mg) if hj then local l = dx9.FindFirstChildOfClass(mg, "\68\101\99\97\108") local el = h(hj) if el then if f(l) then dx9.DrawString({el.x, el.y - 20}, {0, 255, 0}, "\91\86\73\83\73\66\76\69\93") else dx9.DrawString({el.x, el.y - 20}, {255, 0, 0}, "\91\73\78\86\73\83\73\66\76\69\93") end end end end end end end local function k() local p = dx9.GetDatamodel() if not f(p) then return end local _ = dx9.FindFirstChild(p, "\80\108\97\121\101\114\115") if not f(_) then return end local f_ = dx9.GetChildren(_) if not f_ then return end for _, player in pairs(f_) do if f(player) then local g = dx9.GetCharacter(player) if f(g) then local mg = dx9.FindFirstChild(g, "\72\101\97\100") if f(mg) then local jm = dx9.GetName(player) local hj = m(mg) if hj then local l = dx9.FindFirstChildOfClass(mg, "\68\101\99\97\108") local el = h(hj) if el then if f(l) then dx9.DrawString({el.x, el.y - 35}, {0, 255, 0}, "\91\86\93") else dx9.DrawString({el.x, el.y - 35}, {255, 0, 0}, "\91\73\93") end end end end end end end end e() k() local ke = dx9.size() dx9.DrawString({10, ke.height - 30}, {71, 35, 134}, "\35\83\101\118\101\110\116\101\101\110\32\70\97\109\105\108\121")
