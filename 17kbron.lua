local f = dx9.GetDatamodel() local c = dx9.FindFirstChild(f, "\87\111\114\107\115\112\97\99\101") local b = dx9.FindFirstChild(f, "\80\108\97\121\101\114\115") local i = dx9.FindFirstChild(b, "\76\111\99\97\108\80\108\97\121\101\114") local d = i and dx9.GetCharacter(i) local r = dx9.size().height - 30 local l = {0, 255, 0} local e = {255, 0, 0} local t = {71, 35, 134} local h = {} local function m(di) local s = dx9.FindFirstChild(di, "\85\112\112\101\114\84\111\114\115\111") if s and s ~= 0 then return "\85\112\112\101\114\84\111\114\115\111", "\82\49\53" end local _ = dx9.FindFirstChild(di, "\84\111\114\115\111") if _ and _ ~= 0 then return "\84\111\114\115\111", "\82\54" end return nil, "\85\110\107\110\111\119\110" end local function p(o) if not o or o == 0 then return false end local m_ = dx9.FindFirstChildOfClass(o, "\68\101\99\97\108") if m_ and m_ ~= 0 then return true end return false end local function j(di, k, a) if not di or di == 0 then return end if h[di] then return end h[di] = true local n = dx9.FindFirstChild(di, "\72\101\97\100") if not n or n == 0 then return end local pn = dx9.GetPosition(n) if not pn then return end local op = dx9.WorldToScreen({pn.x, pn.y, pn.z}) if not op then return end local jo = p(n) local gj, bodyType = m(di) local kg = gj ~= nil local ak = jo and kg local fa = ak and l or e local cf = ak and "\91\86\73\83\73\66\76\69\93" or "\91\73\78\86\73\83\73\66\76\69\93" dx9.DrawString({op.x, op.y - k}, fa, cf) end if c and c ~= 0 then local bc = dx9.GetChildren(c) if bc then for _, child in pairs(bc) do if child and child ~= 0 and child ~= d then j(child, 20, "\87\111\114\107\115\112\97\99\101") end end end end if b and b ~= 0 then local ib = dx9.GetChildren(b) if ib then for _, player in pairs(ib) do if player and player ~= 0 and player ~= i then local di = dx9.GetCharacter(player) if di and di ~= 0 then j(di, 35, "\80\108\97\121\101\114\115") end end end end end dx9.DrawString({10, r}, t, "\35\83\101\118\101\110\116\101\101\110\32\70\97\109\105\108\121")
